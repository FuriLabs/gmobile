include:
 - project: 'guidog/meta-phosh'
   ref: '04a85df2f3311f3012b6c49bf353b376ae0f32b2'
   file: '/ci/phosh-common-jobs.yml'
 - remote: 'https://gitlab.freedesktop.org/freedesktop/ci-templates/-/raw/d03cddbcff35f26861429fc816c00323f48e99af/templates/ci-fairy.yml'

image: debian:trixie

stages:
  - build
  - tests
  - package
  - deploy

variables:
  DEPS: >-
    ccache build-essential git gcovr

before_script:
  - echo "man-db man-db/auto-update boolean false" | debconf-set-selections
  - export DEBIAN_FRONTEND=noninteractive
  - apt-get -y update
  - apt-get -y install eatmydata
  - eatmydata apt-get -y install $DEPS
  - eatmydata apt-get -y build-dep .

.build: &build_steps
    echo "BUILD_OPTS=${BUILD_OPTS}" &&
    export LC_ALL=C.UTF-8 &&
    meson ${BUILD_OPTS} . _build  &&
    ninja -C _build

build-debian-gcc:
  stage: build
  variables:
    BUILD_OPTS: -Db_coverage=true --werror
  script:
    - *build_steps
  artifacts:
    when: always
    paths:
      - _build

# TODO: move to prebuilt container
doc:
  stage: build
  variables:
    BUILD_OPTS: >-
      -Dtests=false
      -Dgtk_doc=true
  script:
    - meson ${BUILD_OPTS} _build
    - ninja -C _build
    - mv _build/doc/gmobile-0 _doc/
  artifacts:
    paths:
      - _doc/

tests:
  stage: tests
  variables:
  needs: ['build-debian-gcc']
  script:
    - meson ${BUILD_OPTS} _build
    - meson test -C _build
    - ninja -C _build coverage
  coverage: '/^lines:\s+([\d.]+\%)\s+/'
  artifacts:
    reports:
      junit: _build/meson-logs/testlog.junit.xml


package-deb-debian-trixie:arm64:
  stage: package
  variables:
    PHOSH_DOCKER_IMAGE: debian:trixie
  extends: .phosh-build-debian-package
  tags:
    - aarch64

render-display-info:
  stage: tests
  variables:
  needs: ['build-debian-gcc']
  script:
    - tools/render-all
  artifacts:
    expose_as: 'Display panel html'
    paths:
      - _build/out/

pages:
  stage: deploy
  before_script: []
  needs: ['doc']
  script:
    - mv _doc/ public/
  artifacts:
    paths:
      - public
  only:
    - main
